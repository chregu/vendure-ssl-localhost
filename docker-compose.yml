version: '3.5'


services:
  db:
    image: postgres:14.5-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_DB: $DB_NAME
      ALLOW_IP_RANGE: 0.0.0.0/0
    ports:
      - 5432:5432
    volumes:
    - type: volume
      source: postgreslib
      target: /var/lib/postgresql/data
    - type: bind
      source: init_dev.sql
      target: /docker-entrypoint-initdb.d/init_dev.sql
  redis:
    image: redis:6-alpine
    hostname: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: always
    ports:
      - 6457:6379

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    command: ["yarn", "dev:fast"]
    volumes:
      - /usr/src/app/node_modules
      - .:/usr/src/app
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_PORT: 6379
      REDIS_HOST: redis
    profiles:
      - "tls"
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.rule=Host("backend.local-vendure.com")

  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
    ports:
      # HTTPS / SSL port
      - "443:443"
      # The Traefik Web UI port (enabled by api:insecure: true in traefik.yml)
      - "8080:8080"
    volumes:
      - ./.traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./.traefik/config.yml:/etc/traefik/config.yml:ro
      - ./.traefik/certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    profiles:
      - "tls"

volumes:
  postgreslib:
    name: vendure-pg

